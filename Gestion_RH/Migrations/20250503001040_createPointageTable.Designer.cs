// <auto-generated />
using System;
using Gestion_RH.Classes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion_RH.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250503001040_createPointageTable")]
    partial class createPointageTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Gestion_RH.Classes.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Debut")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Fichier")
                        .IsRequired()
                        .HasColumnType("LONGBLOB");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Conge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Debut")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("Conges");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Consigne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TacheId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TacheId");

                    b.ToTable("Consignes");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Contrat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<int>("PostePrincipalId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalaireDeBase")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.HasIndex("PostePrincipalId");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("Gestion_RH.Classes.ContratPosteComplementaire", b =>
                {
                    b.Property<int>("ContratId")
                        .HasColumnType("int");

                    b.Property<int>("PosteId")
                        .HasColumnType("int");

                    b.HasKey("ContratId", "PosteId");

                    b.HasIndex("PosteId");

                    b.ToTable("ContratPostesComplementaires");
                });

            modelBuilder.Entity("Gestion_RH.Classes.ContratPrime", b =>
                {
                    b.Property<int>("ContratId")
                        .HasColumnType("int");

                    b.Property<int>("PrimeId")
                        .HasColumnType("int");

                    b.HasKey("ContratId", "PrimeId");

                    b.HasIndex("PrimeId");

                    b.ToTable("ContratPrimes");
                });

            modelBuilder.Entity("Gestion_RH.Classes.ContratRetenue", b =>
                {
                    b.Property<int>("ContratId")
                        .HasColumnType("int");

                    b.Property<int>("RetenueId")
                        .HasColumnType("int");

                    b.HasKey("ContratId", "RetenueId");

                    b.HasIndex("RetenueId");

                    b.ToTable("ContratRetenues");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Cv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Fichier")
                        .IsRequired()
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("NomFichier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("Cvs");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PostVaccant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("Gestion_RH.Classes.DocRH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Fichier")
                        .IsRequired()
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("NomFichier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("DocsRH");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DateIntegration")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Empreinte")
                        .IsRequired()
                        .HasColumnType("LONGBLOB");

                    b.Property<int>("IdNation")
                        .HasColumnType("int");

                    b.Property<int>("IdPoste")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Photo")
                        .IsRequired()
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Sexe")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdNation");

                    b.HasIndex("IdPoste");

                    b.HasIndex("IdRole");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("Gestion_RH.Classes.EmployeTache", b =>
                {
                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<int>("TacheId")
                        .HasColumnType("int");

                    b.HasKey("EmployeId", "TacheId");

                    b.HasIndex("TacheId");

                    b.ToTable("EmployeTaches");
                });

            modelBuilder.Entity("Gestion_RH.Classes.HeureSup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("HeuresSup");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Nation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Drapeau")
                        .IsRequired()
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Peuple")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Nations");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Pointage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHeure")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .HasColumnType("longtext");

                    b.Property<string>("TypePointage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("Pointages");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Poste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDepartement")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Statut")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartement");

                    b.ToTable("Postes");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Prime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Taux")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Primes");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Retard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Debut")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("Retards");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Retenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Taux")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Retenues");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Support", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Fichier")
                        .IsRequired()
                        .HasColumnType("LONGBLOB");

                    b.Property<string>("NomFichier")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TacheId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TacheId");

                    b.ToTable("Supports");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Tache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateExpedition")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateRendu")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrimeDeRisque")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PrimeObjectif")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Statut")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Absence", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("Absences")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Conge", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("Conges")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Consigne", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Tache", "Tache")
                        .WithMany("Consignes")
                        .HasForeignKey("TacheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tache");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Contrat", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("Contrats")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_RH.Classes.Poste", "PostePrincipal")
                        .WithMany("Contrats")
                        .HasForeignKey("PostePrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");

                    b.Navigation("PostePrincipal");
                });

            modelBuilder.Entity("Gestion_RH.Classes.ContratPosteComplementaire", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Contrat", "Contrat")
                        .WithMany("PostesComplementaires")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_RH.Classes.Poste", "Poste")
                        .WithMany()
                        .HasForeignKey("PosteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrat");

                    b.Navigation("Poste");
                });

            modelBuilder.Entity("Gestion_RH.Classes.ContratPrime", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Contrat", "Contrat")
                        .WithMany("PrimesAcceptees")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_RH.Classes.Prime", "Prime")
                        .WithMany()
                        .HasForeignKey("PrimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrat");

                    b.Navigation("Prime");
                });

            modelBuilder.Entity("Gestion_RH.Classes.ContratRetenue", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Contrat", "Contrat")
                        .WithMany("RetenuesAcceptees")
                        .HasForeignKey("ContratId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_RH.Classes.Retenue", "Retenue")
                        .WithMany()
                        .HasForeignKey("RetenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrat");

                    b.Navigation("Retenue");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Cv", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("Cv")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Gestion_RH.Classes.DocRH", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("DocRH")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Employe", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Nation", "Nation")
                        .WithMany()
                        .HasForeignKey("IdNation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_RH.Classes.Poste", "Poste")
                        .WithMany()
                        .HasForeignKey("IdPoste")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_RH.Classes.Role", "Role")
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nation");

                    b.Navigation("Poste");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Gestion_RH.Classes.EmployeTache", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("EmployeTaches")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_RH.Classes.Tache", "Tache")
                        .WithMany("EmployeTaches")
                        .HasForeignKey("TacheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");

                    b.Navigation("Tache");
                });

            modelBuilder.Entity("Gestion_RH.Classes.HeureSup", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("HeureSups")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Pointage", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("Pointages")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Poste", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("IdDepartement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Retard", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Employe", "Employe")
                        .WithMany("Retards")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Support", b =>
                {
                    b.HasOne("Gestion_RH.Classes.Tache", "Tache")
                        .WithMany("Supports")
                        .HasForeignKey("TacheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tache");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Contrat", b =>
                {
                    b.Navigation("PostesComplementaires");

                    b.Navigation("PrimesAcceptees");

                    b.Navigation("RetenuesAcceptees");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Employe", b =>
                {
                    b.Navigation("Absences");

                    b.Navigation("Conges");

                    b.Navigation("Contrats");

                    b.Navigation("Cv");

                    b.Navigation("DocRH");

                    b.Navigation("EmployeTaches");

                    b.Navigation("HeureSups");

                    b.Navigation("Pointages");

                    b.Navigation("Retards");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Poste", b =>
                {
                    b.Navigation("Contrats");
                });

            modelBuilder.Entity("Gestion_RH.Classes.Tache", b =>
                {
                    b.Navigation("Consignes");

                    b.Navigation("EmployeTaches");

                    b.Navigation("Supports");
                });
#pragma warning restore 612, 618
        }
    }
}
